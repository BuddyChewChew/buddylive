name: TV Guide and Playlist Generator

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 */2 * * *'  # Run every 2 hours
  workflow_dispatch:

jobs:
  generate_files:
    name: Generate TV Guide and Playlists
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 pytz selenium webdriver-manager selenium-stealth

      - name: Set up Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends google-chrome-stable

      - name: Generate XML EPG
        run: |
          mkdir -p en
          TIMESTAMP=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
          echo "<!-- Generated at: $TIMESTAMP -->" > en/videoall.xml
          python py/videoxml.py >> en/videoall.xml 2> en/xml_errors.txt

      - name: Generate M3U Playlists
        run: |
          mkdir -p en
          TIMESTAMP=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
          
          # Generate the M3U file with timestamp
          echo "#EXTM3U url-tvg=\"https://raw.githubusercontent.com/BuddyChewChew/buddylive/main/en/videoall.xml\"" > en/videoall.m3u
          echo "# Last Updated: $TIMESTAMP" >> en/videoall.m3u
          
          # Save raw output for debugging
          python py/videolivetv.py > en/raw_output.txt 2> en/raw_errors.txt
          
          # Filter output and extract .m3u8 URLs from ping.gif mu parameters
          cat en/raw_output.txt | grep -v -E '^<|^$|^\s*$|jwplayer6/ping' | \
          awk '
          BEGIN { p="" }
          /^#EXTINF/ { if (p) print p; p=$0; next }
          p && !/^#/ && /\.m3u8$/ { print p; print; p=""; next }
          p && !/^#/ && /ping\.gif/ && /mu=/ {
            match($0, /mu=([^&]+)/, arr);
            if (arr[1] && arr[1] ~ /\.m3u8$/) {
              print p;
              print arr[1];
              p="";
            }
            next
          }
          END { if (p) print "# Skipped incomplete entry: " p > "/dev/stderr" }
          ' | sort -t'"' -k4,4 -u >> en/videoall.m3u
          
          # Create a copy
          cp en/videoall.m3u en/videolivetv.m3u
          
          # Verify the files
          echo "Generated files:"
          ls -la en/
          echo "\nRaw output (first 20 lines):"
          head -n 20 en/raw_output.txt || true
          echo "\nRaw errors:"
          cat en/raw_errors.txt || true
          echo "\nXML errors:"
          cat en/xml_errors.txt || true
          echo "\nFirst 20 lines of videoall.m3u:"
          head -n 20 en/videoall.m3u || true

      - name: Force commit and push updates
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          TIMESTAMP=$(date -u '+%Y-%m-%d %H:%M:%S UTC')
          git add en/videoall.xml en/videoall.m3u en/videolivetv.m3u en/raw_output.txt en/raw_errors.txt en/xml_errors.txt
          git commit -m "Auto-update TV guide and playlists - $TIMESTAMP" --allow-empty
          git push
          echo "Files updated and pushed at $TIMESTAMP"
